buildscript {
    ext {
        springBootVersion = '2.7.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
    
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.crewmate'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
    }

    dependencies {
        //for test
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        
        //개발에 필요한 web설정
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.apache.commons:commons-lang3:3.0' //StringUtils
        
        //lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
    }
}

project(':shop-auth') {
    dependencies {
        implementation project(':shop-api-common')
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'   //spring에서 레디스와 연결하기위한 의존
        implementation 'org.springframework.session:spring-session-data-redis'     //spring에서 세션을 레디스에 저장하기위한 의존 (@EnableRedisHttpSession 사용하기위함)
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.4' //feign 사용
        implementation 'com.netflix.feign:feign-jackson:8.18.0' //feign 에서 encode, decode사용
    }
}

project(':shop-api-system') {
    dependencies {
        implementation project(':shop-api-common')
    }
}

project(':shop-api-product') {
    dependencies {
        implementation project(':shop-api-common')
    }
}

project(':shop-api-common') {
    if (it.name.startsWith('shop-api')) { //모든 프로젝트가 shop-api-common을 의존하도록 하지만 DB설정이 필요없는 auth는 필요없다.
        dependencies {
            //DB설정
            implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2' //마이바티스 및 @Mapper에 필요함
            runtimeOnly 'mysql:mysql-connector-java' //mysql 연결
        } 
    }
}


tasks.named('test') {
    useJUnitPlatform()
}